
package com.softlimits.clarinet;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "MessageService", targetNamespace = "http://www.softlimits.com/Clarinet.Trade", wsdlLocation = "file:/C:/workspace/dev/org.dma.services.espap/CTMessageService.wsdl")
public class MessageService
    extends Service
{

    private final static URL MESSAGESERVICE_WSDL_LOCATION;
    private final static WebServiceException MESSAGESERVICE_EXCEPTION;
    private final static QName MESSAGESERVICE_QNAME = new QName("http://www.softlimits.com/Clarinet.Trade", "MessageService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/C:/workspace/dev/org.dma.services.espap/CTMessageService.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        MESSAGESERVICE_WSDL_LOCATION = url;
        MESSAGESERVICE_EXCEPTION = e;
    }

    public MessageService() {
        super(__getWsdlLocation(), MESSAGESERVICE_QNAME);
    }

    public MessageService(WebServiceFeature... features) {
        super(__getWsdlLocation(), MESSAGESERVICE_QNAME, features);
    }

    public MessageService(URL wsdlLocation) {
        super(wsdlLocation, MESSAGESERVICE_QNAME);
    }

    public MessageService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, MESSAGESERVICE_QNAME, features);
    }

    public MessageService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public MessageService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns IMessageService
     */
    @WebEndpoint(name = "CustomBinding_IMessageService")
    public IMessageService getCustomBindingIMessageService() {
        return super.getPort(new QName("http://www.softlimits.com/Clarinet.Trade", "CustomBinding_IMessageService"), IMessageService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IMessageService
     */
    @WebEndpoint(name = "CustomBinding_IMessageService")
    public IMessageService getCustomBindingIMessageService(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.softlimits.com/Clarinet.Trade", "CustomBinding_IMessageService"), IMessageService.class, features);
    }

    /**
     * 
     * @return
     *     returns IMessageService
     */
    @WebEndpoint(name = "CustomBinding_IMessageService1")
    public IMessageService getCustomBindingIMessageService1() {
        return super.getPort(new QName("http://www.softlimits.com/Clarinet.Trade", "CustomBinding_IMessageService1"), IMessageService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IMessageService
     */
    @WebEndpoint(name = "CustomBinding_IMessageService1")
    public IMessageService getCustomBindingIMessageService1(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.softlimits.com/Clarinet.Trade", "CustomBinding_IMessageService1"), IMessageService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (MESSAGESERVICE_EXCEPTION!= null) {
            throw MESSAGESERVICE_EXCEPTION;
        }
        return MESSAGESERVICE_WSDL_LOCATION;
    }

}
